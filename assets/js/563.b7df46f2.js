(window.webpackJsonp=window.webpackJsonp||[]).push([[563],{980:function(v,_,t){"use strict";t.r(_);var a=t(15),r=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"相同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[v._v("#")]),v._v(" 相同点")]),v._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),t("p",[v._v("GET 和 POST 的本质是相同的")])]),v._v(" "),t("p",[v._v("GET 和 POST 方法只是 HTTP 协议为了不同分工而规定的两种请求方式。")]),v._v(" "),t("p",[v._v("HTTP 是什么？HTTP 是基于 TCP/IP 的关于数据如何在万维网中如何通信的协议。")]),v._v(" "),t("p",[v._v("HTTP 的底层是 TCP/IP。所以 GET 和 POST 的底层也是 TCP/IP，也就是说，"),t("strong",[v._v("GET 和 POST 都是 TCP 链接")]),v._v("。所以说，它们的本质是相同的。")]),v._v(" "),t("p",[v._v("GET 和 POST 之所以产生，要通过HTTP的规则和浏览器/服务器的限制进行区分，使它们在应用过程中体现出不同。")]),v._v(" "),t("p",[v._v("整个请求过程大概是这样的：")]),v._v(" "),t("ul",[t("li",[v._v("客户端 IP 发出请求。")]),v._v(" "),t("li",[v._v("发出的请求数据包会通过 TCP ，经网络传输给远程服务端 IP。")]),v._v(" "),t("li",[v._v("服务端 IP 收到请求包之后，解析并处理请求包最后服务端会通过 TCP 将处理结果返回给客户端。")]),v._v(" "),t("li",[v._v("用户便可以查看到想要的响应数据。")])]),v._v(" "),t("h2",{attrs:{id:"区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[v._v("#")]),v._v(" 区别")]),v._v(" "),t("p",[v._v("虽然说 GET 和 POST 请求的本质是相同的 —— 都是 TCP 连接，但是，在平时的使用中还是存在一定区别的。")]),v._v(" "),t("h3",{attrs:{id:"作用不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用不同"}},[v._v("#")]),v._v(" 作用不同")]),v._v(" "),t("p",[v._v("既然是为了不同分工而产生的两种方法，那么它们作用肯定是不同的：")]),v._v(" "),t("ul",[t("li",[v._v("GET 多用于从服务端获取资源")]),v._v(" "),t("li",[v._v("POST 一般用来向服务端提交资源")])]),v._v(" "),t("h3",{attrs:{id:"参数传递方式不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数传递方式不同"}},[v._v("#")]),v._v(" 参数传递方式不同")]),v._v(" "),t("p",[v._v("这一点应该是我们能够最直观地观察到的。")]),v._v(" "),t("ul",[t("li",[v._v("GET 的参数一般是通过 "),t("code",[v._v("?")]),v._v(" 跟在 URL 后面的，多个参数通过 "),t("code",[v._v("&amp;")]),v._v(" 连接，比如："),t("code",[v._v("www.example.com?serach=bianchengsanmei&amp;content=123")]),v._v("。")]),v._v(" "),t("li",[v._v("POST 的参数一般是包含在 "),t("code",[v._v("request body")]),v._v(" 中的")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/052.png",alt:"image"}})]),v._v(" "),t("blockquote",[t("p",[v._v("其实，这个区别不是绝对的，GET 也可以通过 params 携带参数，而 POST 的URL 后面也可以携带参数，只是我们通常不建议这么做而已。")])]),v._v(" "),t("h3",{attrs:{id:"安全性不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全性不同"}},[v._v("#")]),v._v(" 安全性不同")]),v._v(" "),t("p",[v._v("因为参数传递方式的不同，所以 GET 和 POST 的安全性不同：GET 比 POST 更不安全，因为参数直接暴露在URL上，所以 GET 不能用来传递敏感信息。")]),v._v(" "),t("blockquote",[t("p",[v._v("从传输的角度来说，他们都是不安全的，因为 HTTP 在网络上是明文传输的，只要在网络节点上捉包，就能完整地获取数据报文，要想安全传输，就只有加密，也就是 HTTPS。")])]),v._v(" "),t("h3",{attrs:{id:"参数长度限制不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数长度限制不同"}},[v._v("#")]),v._v(" 参数长度限制不同")]),v._v(" "),t("p",[v._v("GET 和 POST 传递参数的长度不同：")]),v._v(" "),t("ul",[t("li",[v._v("get传送的数据量较小，不能大于2KB。")]),v._v(" "),t("li",[v._v("post传送的数据量较大，一般被默认为不受限制。")])]),v._v(" "),t("p",[v._v("在这里我们要明确一点："),t("strong",[v._v("HTTP 协议没有 Body 和 URL 的长度限制，对 URL 限制的大多是浏览器和服务器的原因。")])]),v._v(" "),t("p",[v._v("服务器是因为处理长 URL 要消耗比较多的资源，为了性能和安全（防止恶意构造长 URL 来攻击）考虑，会给 URL 长度加限制。")]),v._v(" "),t("h3",{attrs:{id:"参数数据类型不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数数据类型不同"}},[v._v("#")]),v._v(" 参数数据类型不同")]),v._v(" "),t("p",[v._v("参数的数据类型，GET 只接受 ASCII 字符，而 POST 没有限制。")]),v._v(" "),t("h3",{attrs:{id:"编码方式不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编码方式不同"}},[v._v("#")]),v._v(" 编码方式不同")]),v._v(" "),t("p",[v._v("GET 请求只能进行 URL 编码（application/x-www-form-urlencoded）")]),v._v(" "),t("p",[v._v("POST 支持多种编码方式（application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多种编码。）")]),v._v(" "),t("h3",{attrs:{id:"缓存机制不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制不同"}},[v._v("#")]),v._v(" 缓存机制不同")]),v._v(" "),t("p",[v._v("这个需要从以下几点来说明：")]),v._v(" "),t("ul",[t("li",[v._v("GET 请求会被浏览器主动cache，而 POST 不会，除非手动设置。")]),v._v(" "),t("li",[v._v("GET 请求参数会被完整保留在浏览器历史记录里，而 POST 中的参数不会被保留。")]),v._v(" "),t("li",[v._v("GET 产生的 URL 地址可以被 Bookmark，而 POST 不可以。")]),v._v(" "),t("li",[v._v("GET 在浏览器回退时是无害的，而 POST 会再次提交请求。")])]),v._v(" "),t("h3",{attrs:{id:"时间消耗不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间消耗不同"}},[v._v("#")]),v._v(" 时间消耗不同")]),v._v(" "),t("p",[v._v("GET 和 POST 请求时间的不同主要是因为：")]),v._v(" "),t("ul",[t("li",[v._v("GET 产生一个 TCP 数据包；")]),v._v(" "),t("li",[v._v("POST 产生两个 TCP 数据包。")])]),v._v(" "),t("p",[v._v("对于 GET 方式的请求，浏览器会把 header 和 data 一并发送出去，服务器响应 200（返回数据）；而对于 POST，浏览器先发送 Header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok（返回数据），详细分析一下：")]),v._v(" "),t("h4",{attrs:{id:"post-请求的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#post-请求的过程"}},[v._v("#")]),v._v(" POST 请求的过程：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("浏览器请求 TCP 连接（第一次握手）")])]),v._v(" "),t("li",[t("p",[v._v("服务器答应进行 TCP 连接（第二次握手）")])]),v._v(" "),t("li",[t("p",[v._v("浏览器确认，并发送 POST 请求头（第三次握手，这个报文比较小，所以 HTTP 会在此时进行第一次数据发送）")])]),v._v(" "),t("li",[t("p",[v._v("服务器返回100 Continue响应")])]),v._v(" "),t("li",[t("p",[v._v("浏览器发送数据")])]),v._v(" "),t("li",[t("p",[v._v("服务器返回 200 OK响应")])])]),v._v(" "),t("h4",{attrs:{id:"get-请求的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-请求的过程"}},[v._v("#")]),v._v(" GET 请求的过程：")]),v._v(" "),t("ol",[t("li",[v._v("浏览器请求 TCP 连接（第一次握手）")]),v._v(" "),t("li",[v._v("服务器答应进行 TCP 连接（第二次握手）")]),v._v(" "),t("li",[v._v("浏览器确认，并发送 GET 请求头和数据（第三次握手，这个报文比较小，所以 HTTP 会在此时进行第一次数据发送）")]),v._v(" "),t("li",[v._v("服务器返回 200 OK响应")])]),v._v(" "),t("blockquote",[t("p",[v._v("在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。")])]),v._v(" "),t("h4",{attrs:{id:"参考文章链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[v._v("#")]),v._v(" 参考文章链接")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6992933721703710750",target:"_blank",rel:"noopener noreferrer"}},[v._v("【前端 · 面试 】HTTP 总结（五）—— GET 和 POST"),t("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=r.exports}}]);