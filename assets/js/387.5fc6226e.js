(window.webpackJsonp=window.webpackJsonp||[]).push([[387],{804:function(n,s,t){"use strict";t.r(s);var a=t(15),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("请编写一个函数，用于 删除单链表中某个特定节点 。在设计函数时需要注意，你无法访问链表的头节点 head ，只能直接访问 要被删除的节点 。")]),n._v(" "),t("p",[n._v("题目数据保证需要删除的节点 不是末尾节点 。")]),n._v(" "),t("p",[n._v("示例 1：")]),n._v(" "),t("p",[t("img",{attrs:{src:"/images/181.png",alt:"image"}})]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("输入：head = [4,5,1,9], node = 5\n输出：[4,1,9]\n解释：指定链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * @param {ListNode} node\n * @return {void} Do not return anything, modify node in-place instead.\n */")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("deleteNode")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("node")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("val "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("val \n    node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br")])]),t("blockquote",[t("p",[n._v("来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/delete-node-in-a-linked-list")])])])}),[],!1,null,null,null);s.default=e.exports}}]);