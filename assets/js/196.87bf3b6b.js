(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{613:function(t,i,n){"use strict";n.r(i);var e=n(15),s=Object(e.a)({},(function(){var t=this,i=t.$createElement,n=t._self._c||i;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"mixin的用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mixin的用法"}},[t._v("#")]),t._v(" mixin的用法")]),t._v(" "),n("p",[t._v("mixin是vue自带的混入功能，用来实现组件内容的复用")]),t._v(" "),n("blockquote",[n("p",[t._v("在日常的开发中，我们经常会遇到在不同的组件中经常会需要用到一些相同或者相似的代码，这些代码的功能相对独立，可以通过 Vue 的 mixin 功能抽离公共的业务逻辑，原理类似“对象的继承”，当组件初始化时会调用 mergeOptions 方法进行合并，采用策略模式针对不同的属性进行合并。当组件和混入对象含有同名选项时，这些选项将以恰当的方式进行“合并”。")])]),t._v(" "),n("p",[n("code",[t._v("作用")]),t._v("：多个组件可以共享数据和方法，在使用mixin的组件中引入后，mixin中的方法和属性会合并到该组件中，可以直接使用。钩子函数会两个都被调用，mixin中的钩子首先执行。")])])}),[],!1,null,null,null);i.default=s.exports}}]);