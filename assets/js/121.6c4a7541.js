(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{539:function(s,a,t){"use strict";t.r(a);var r=t(15),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"作用与区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用与区别"}},[s._v("#")]),s._v(" 作用与区别")]),s._v(" "),t("p",[s._v("当浏览器碰到 script 脚本的时候：")]),s._v(" "),t("ol",[t("li",[s._v("无这两种属性")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"script.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("没有 defer 或 async，浏览器会立即加载并执行指定的脚本，“立即”指的是在渲染该 script 标签之下的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行。（阻塞DOM的解析）")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("有async属性")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"script.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("有 async，加载和渲染后续文档元素的过程将和 script.js 的加载与执行并行进行（异步）。")]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("有defer属性")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script defer src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"myscript.js"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("有 defer，加载后续文档元素的过程将和 script.js 的加载并行进行（异步），但是 script.js 的执行要在所有元素解析完成之后，DOMContentLoaded 事件触发之前完成。")]),s._v(" "),t("p",[s._v("因此：")]),s._v(" "),t("p",[s._v("然后从实用角度来说呢，首先把所有脚本都丢到 "),s._v(" 之前是最佳实践，因为对于旧浏览器来说这是唯一的优化选择，此法可保证非脚本的其他一切元素能够以最快的速度得到加载和解析。")]),s._v(" "),t("h3",{attrs:{id:"图示1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图示1"}},[s._v("#")]),s._v(" 图示1")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/024.png",alt:"image"}})]),s._v(" "),t("p",[s._v("蓝色线代表网络读取，红色线代表执行时间，这俩都是针对脚本的；绿色线代表 HTML 解析。")]),s._v(" "),t("p",[s._v("此图告诉我们以下几个要点：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("defer 和 async 在网络读取（下载）这块儿是一样的，都是异步的（相较于 HTML 解析）")])]),s._v(" "),t("li",[t("p",[s._v("它俩的差别在于脚本下载完之后何时执行，显然 defer 是最接近我们对于应用脚本加载和执行的要求的")])]),s._v(" "),t("li",[t("p",[s._v("关于 defer，此图未尽之处在于它是按照加载顺序执行脚本的，这一点要善加利用")])]),s._v(" "),t("li",[t("p",[s._v("async 则是一个乱序执行的主，反正对它来说脚本的加载和执行是紧紧挨着的，所以不管你声明的顺序如何，只要它加载完了就会立刻执行")])]),s._v(" "),t("li",[t("p",[s._v("仔细想想，async 对于应用脚本的用处不大，因为它完全不考虑依赖（哪怕是最低级的顺序执行），不过它对于那些可以不依赖任何脚本或不被任何脚本依赖的脚本来说却是非常合适的，最典型的例子：Google Analytics")])])]),s._v(" "),t("h3",{attrs:{id:"图示2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图示2"}},[s._v("#")]),s._v(" 图示2")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/025.png",alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"参考文章链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[s._v("#")]),s._v(" 参考文章链接")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/q/1010000000640869",target:"_blank",rel:"noopener noreferrer"}},[s._v("defer和async的区别"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);