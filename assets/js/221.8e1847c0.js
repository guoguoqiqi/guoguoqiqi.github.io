(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{637:function(t,e,r){"use strict";r.r(e);var s=r(15),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"vuex的使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuex的使用"}},[t._v("#")]),t._v(" Vuex的使用")]),t._v(" "),r("blockquote",[r("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。")])]),t._v(" "),r("ol",[r("li",[r("strong",[t._v("Vuex 的状态存储是响应式的")])])]),t._v(" "),r("p",[t._v("当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[r("strong",[t._v("改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation")])])]),t._v(" "),r("p",[t._v("这样使得我们可以方便地跟踪每一个状态的变化。")]),t._v(" "),r("h4",{attrs:{id:"主要包括以下几个模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要包括以下几个模块"}},[t._v("#")]),t._v(" 主要包括以下几个模块：")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("State：定义了应用状态的数据结构，可以在这里设置默认的初始状态。")])]),t._v(" "),r("li",[r("p",[t._v("Getter：允许组件从 Store 中获取数据，mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性。")])]),t._v(" "),r("li",[r("p",[t._v("Mutation：是唯一更改 store 中状态的方法，且必须是同步函数。")])]),t._v(" "),r("li",[r("p",[t._v("Action：用于提交 mutation，而不是直接变更状态，可以包含任意异步操作。")])]),t._v(" "),r("li",[r("p",[t._v("Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中。")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);