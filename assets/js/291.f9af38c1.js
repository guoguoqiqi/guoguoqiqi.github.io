(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{708:function(e,r,t){"use strict";t.r(r);var a=t(15),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"如何提升webpack构建速度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何提升webpack构建速度"}},[e._v("#")]),e._v(" 如何提升webpack构建速度")]),e._v(" "),t("h3",{attrs:{id:"分析打包速度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析打包速度"}},[e._v("#")]),e._v(" 分析打包速度")]),e._v(" "),t("p",[e._v("使用插件 "),t("code",[e._v("speed-measure-webpack-plugin")])]),e._v(" "),t("h3",{attrs:{id:"常用优化方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用优化方法"}},[e._v("#")]),e._v(" 常用优化方法")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("优化Loader配置")])])]),e._v(" "),t("p",[e._v("由于Loader对文件的转换操作很耗时，所以需要让尽可能少的文件被Loader处理。我们可以通过以下3方面优化Loader配置：")]),e._v(" "),t("ul",[t("li",[e._v("优化正则匹配")]),e._v(" "),t("li",[e._v("通过cacheDirectory选项开启缓存")]),e._v(" "),t("li",[e._v("通过include、exclude来减少被处理的文件")])]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[e._v("优化resolve.modules配置")])])]),e._v(" "),t("p",[e._v("resolve.modules 用于配置Webpack去哪些目录下寻找第三方模块。resolve.modules的默认值是［node modules］，含义是先去当前目录的/node modules目录下去找我们想找的模块，如果没找到，就去上一级目录../node modules中找，再没有就去../ .. /node modules中找，以此类推，这和Node.js的模块寻找机制很相似。当安装的第三方模块都放在项目根目录的./node modules目录下时，就没有必要按照默认的方式去一层层地寻找，可以指明存放第三方模块的绝对路径，以减少寻找")]),e._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[e._v("优化resolve.alias配置")])])]),e._v(" "),t("p",[e._v("resolve.alias配置项通过别名来将原导入路径映射成一个新的导入路径")]),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[e._v("优化resolve.extensions配置")])])]),e._v(" "),t("p",[e._v("在导入语句没带文件后缀时，Webpack 会在自动带上后缀后去尝试询问文件是否存在。默认是：extensions :[‘. js ‘,’. json ’] 。也就是说，当遇到require ( '. /data ’）这样的导入语句时，Webpack会先去寻找./data .js 文件，如果该文件不存在，就去寻找./data.json 文件，如果还是找不到就报错。如果这个列表越长，或者正确的后缀越往后，就会造成尝试的次数越多，所以 resolve .extensions 的配置也会影响到构建的性能")]),e._v(" "),t("ul",[t("li",[e._v("后缀尝试列表要尽可能小，不要将项目中不可能存在的情况写到后缀尝试列表中")]),e._v(" "),t("li",[e._v("频率出现最高的文件后缀要优先放在最前面，以做到尽快退出寻找过程")]),e._v(" "),t("li",[e._v("在源码中写导入语句时，要尽可能带上后缀，从而可以避免寻找过程。例如在确定的情况下将 require(’. /data ’)写成require(’. /data.json ’)，可以结合enforceExtension 和 enforceModuleExtension开启使用来强制开发者遵守这条优化")])]),e._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[e._v("优化resolve.noParse配置")])])]),e._v(" "),t("p",[e._v("noParse配置项可以让Webpack忽略对部分没采用模块化的文件的递归解析和处理，这 样做的好处是能提高构建性能。原因是一些库如jQuery、ChartJS 庞大又没有采用模块化标准，让Webpack去解析这些文件既耗时又没有意义")]),e._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[t("p",[t("strong",[e._v("提取公共代码")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("按需加载代码")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("优化SourceMap")])])])]),e._v(" "),t("p",[e._v("因为不同的source map配置选项生成的映射文件内容不同，比如有的不会生成代码的列信息")]),e._v(" "),t("ol",{attrs:{start:"9"}},[t("li",[t("strong",[e._v("开启多进程打包")])])]),e._v(" "),t("ul",[t("li",[e._v("thread-loader")]),e._v(" "),t("li",[e._v("HappyPack")])]),e._v(" "),t("ol",{attrs:{start:"10"}},[t("li",[t("strong",[e._v("利用缓存")])])]),e._v(" "),t("ul",[t("li",[e._v("cache-loader")]),e._v(" "),t("li",[e._v("HardSourceWebpackPlugin（正在使用的，能提升90%的时间）")])]),e._v(" "),t("h4",{attrs:{id:"参考文章链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[e._v("#")]),e._v(" 参考文章链接")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6844903745810104328",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue项目Webpack优化实践，构建效率提高50%"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://juejin.cn/post/6844904071736852487",target:"_blank",rel:"noopener noreferrer"}},[e._v("玩转 webpack，使你的打包速度提升 90%"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://juejin.cn/post/6854573213171580941",target:"_blank",rel:"noopener noreferrer"}},[e._v("你可能不知道的9条Webpack优化策略"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/uAMN-b6I47b_kZAUOw9hoA",target:"_blank",rel:"noopener noreferrer"}},[e._v("学习 Webpack5 之路（优化篇）"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);