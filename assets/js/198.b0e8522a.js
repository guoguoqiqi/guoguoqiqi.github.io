(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{614:function(e,t,v){"use strict";v.r(t);var _=v(15),r=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("路由钩子的执行流程, 钩子函数种类有:全局守卫、路由守卫、组件守卫。")]),e._v(" "),v("h3",{attrs:{id:"完整的导航解析流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#完整的导航解析流程"}},[e._v("#")]),e._v(" 完整的导航解析流程:")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("导航被触发。")])]),e._v(" "),v("li",[v("p",[e._v("在失活的组件里调用 beforeRouteLeave 守卫。")])]),e._v(" "),v("li",[v("p",[e._v("调用全局的 beforeEach 守卫。")])]),e._v(" "),v("li",[v("p",[e._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")])]),e._v(" "),v("li",[v("p",[e._v("在路由配置里调用 beforeEnter。")])]),e._v(" "),v("li",[v("p",[e._v("解析异步路由组件。")])]),e._v(" "),v("li",[v("p",[e._v("在被激活的组件里调用 beforeRouteEnter。")])]),e._v(" "),v("li",[v("p",[e._v("调用全局的 beforeResolve 守卫 (2.5+)。")])]),e._v(" "),v("li",[v("p",[e._v("导航被确认。")])]),e._v(" "),v("li",[v("p",[e._v("调用全局的 afterEach 钩子。")])]),e._v(" "),v("li",[v("p",[e._v("触发 DOM 更新。")])]),e._v(" "),v("li",[v("p",[e._v("调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);