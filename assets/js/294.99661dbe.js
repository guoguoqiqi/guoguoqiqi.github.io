(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{712:function(t,e,r){"use strict";r.r(e);var a=r(15),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"如何减小打包体积提高页面加载速度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何减小打包体积提高页面加载速度"}},[t._v("#")]),t._v(" 如何减小打包体积提高页面加载速度")]),t._v(" "),r("h3",{attrs:{id:"分析输出文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分析输出文件"}},[t._v("#")]),t._v(" 分析输出文件")]),t._v(" "),r("p",[t._v("使用插件 "),r("code",[t._v("webpack-bundle-analyzer")])]),t._v(" "),r("h3",{attrs:{id:"常用优化方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用优化方法"}},[t._v("#")]),t._v(" 常用优化方法")]),t._v(" "),r("h4",{attrs:{id:"减小打包体积"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#减小打包体积"}},[t._v("#")]),t._v(" 减小打包体积")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("代码压缩")])])]),t._v(" "),r("ol",[r("li",[t._v("JS 压缩：  使用 TerserWebpackPlugin 来压缩 JavaScript。")]),t._v(" "),r("li",[t._v("CSS 压缩： 使用 CssMinimizerWebpackPlugin 压缩 CSS 文件。")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("代码分离")])])]),t._v(" "),r("ol",[r("li",[r("p",[t._v("抽离重复代码： SplitChunksPlugin 插件开箱即用，可以将公共的依赖模块提取到已有的入口 chunk 中，或者提取到一个新生成的 chunk。")])]),t._v(" "),r("li",[r("p",[t._v("CSS 文件分离： MiniCssExtractPlugin 插件将 CSS 提取到单独的文件中，为每个包含 CSS 的 JS 文件创建一个 CSS 文件，并且支持 CSS 和 SourceMaps 的按需加载。")])]),t._v(" "),r("li",[r("p",[t._v("最小化 entry chunk： 通过配置 optimization.runtimeChunk = true，为运行时代码创建一个额外的 chunk，减少 entry chunk 体积，提高性能。")])])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("tree-shaking摇树")])])]),t._v(" "),r("ol",[r("li",[r("p",[t._v("JS：目的就是去除被引用但是没有被使用的代码 只需要将mode模式设置为production即可开启 （webpack5 sideEffects）")])]),t._v(" "),r("li",[r("p",[t._v("对组件库引用的优化：按需引入所需的方法或者组件 lodash、ant-design等")])]),t._v(" "),r("li",[r("p",[t._v("CSS：使用 purgecss-webpack-plugin 对 CSS Tree Shaking。")])])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("CDN")])])]),t._v(" "),r("p",[t._v("可以将一些资源文件或者是不想参与打包的库通过cdn引入，然后externals配置外部扩展")]),t._v(" "),r("h4",{attrs:{id:"提高页面加载速度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#提高页面加载速度"}},[t._v("#")]),t._v(" 提高页面加载速度")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("懒加载")])])]),t._v(" "),r("p",[t._v("通过 webpack 提供的 import() 语法 动态导入 功能进行代码分离，通过按需加载，大大提升网页加载速度。")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("小图片使用base64格式，不使用用网络请求")])])]),t._v(" "),r("p",[t._v("通过url-loader会将小图片转为base64格式，减少网络请求，提升加载速度")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("打包时合理使用hash，如果没改动的文件，命中缓存")])])]),t._v(" "),r("p",[t._v("当我们在打包时，使用hash计算文件变动，如果文件被改变，则hash的值改变，在上线后，浏览器访问时没有改变的文件会命中缓存，从而达到性能优化的目的")]),t._v(" "),r("h4",{attrs:{id:"参考文章链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[t._v("#")]),t._v(" 参考文章链接")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.cn/post/6996816316875161637",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习 Webpack5 之路（优化篇）"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1643104",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack优化解决项目体积大、打包时间长、刷新时间长问题！"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);