(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{457:function(v,_,t){"use strict";t.r(_);var e=t(15),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"一、是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、是什么"}},[v._v("#")]),v._v(" 一、是什么")]),v._v(" "),t("p",[v._v("一般情况下，出现冲突的场景有如下：")]),v._v(" "),t("ul",[t("li",[v._v("多个分支代码合并到一个分支时")]),v._v(" "),t("li",[v._v("多个分支向同一个远端分支推送")])]),v._v(" "),t("p",[v._v("具体情况就是，多个分支修改了同一个文件（任何地方）或者多个分支修改了同一个文件的名称")]),v._v(" "),t("p",[v._v("如果两个分支中分别修改了不同文件中的部分，是不会产生冲突，直接合并即可")]),v._v(" "),t("p",[v._v("应用在命令中，就是"),t("code",[v._v("push")]),v._v("、"),t("code",[v._v("pull")]),v._v("、"),t("code",[v._v("stash")]),v._v("、"),t("code",[v._v("rebase")]),v._v("等命令下都有可能产生冲突情况，从本质上来讲，都是"),t("code",[v._v("merge")]),v._v("和"),t("code",[v._v("patch")]),v._v("（应用补丁）时产生冲突")]),v._v(" "),t("h2",{attrs:{id:"二、分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、分析"}},[v._v("#")]),v._v(" 二、分析")]),v._v(" "),t("p",[v._v("在本地主分值"),t("code",[v._v("master")]),v._v("创建一个"),t("code",[v._v("a.txt")]),v._v("文件，文件起始位置写上"),t("code",[v._v("master commit")]),v._v("，如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/062.png",alt:"image"}})]),v._v(" "),t("p",[v._v("然后提交到仓库：")]),v._v(" "),t("ul",[t("li",[v._v("git add a.txt")]),v._v(" "),t("li",[v._v("git commit -m 'master first commit'")])]),v._v(" "),t("p",[v._v("创建一个新的分支"),t("code",[v._v("featurel1")]),v._v("分支，并进行切换，如下：")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("git checkout -b featurel1  \n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("然后修改"),t("code",[v._v("a.txt")]),v._v("文件首行文字为 "),t("code",[v._v("featurel commit")]),v._v("，然后添加到暂存区，并开始进行提交到仓库：")]),v._v(" "),t("ul",[t("li",[v._v("git add a.txt")]),v._v(" "),t("li",[v._v("git commit -m 'featurel  first change'")])]),v._v(" "),t("p",[v._v("然后通过"),t("code",[v._v("git checkout master")]),v._v("切换到主分支，通过"),t("code",[v._v("git merge")]),v._v("进行合并，发现不会冲突")]),v._v(" "),t("p",[v._v("此时"),t("code",[v._v("a.txt")]),v._v("文件的内容变成"),t("code",[v._v("featurel commit")]),v._v("，没有出现冲突情况，这是因为"),t("code",[v._v("git")]),v._v("在内部发生了快速合并")]),v._v(" "),t("blockquote",[t("p",[v._v("如果当前分支的每一个提交(commit)都已经存在另一个分支里了，git 就会执行一个“快速向前”(fast forward)操作")]),v._v(" "),t("p",[v._v("git 不创建任何新的提交(commit)，只是将当前分支指向合并进来的分支")])]),v._v(" "),t("p",[v._v("如果此时切换到"),t("code",[v._v("featurel")]),v._v("分支，将文件的内容修改成"),t("code",[v._v("featrue second commit")]),v._v("，然后提交到本地仓库")]),v._v(" "),t("p",[v._v("然后切换到主分支，如果此时在"),t("code",[v._v("a.txt")]),v._v("文件再次修改，修改成"),t("code",[v._v("mastet second commit")]),v._v("，然后再次提交到本地仓库")]),v._v(" "),t("p",[v._v("此时，"),t("code",[v._v("master")]),v._v("分支和"),t("code",[v._v("feature1")]),v._v("分支各自都分别有新的提交，变成了下图所示：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/063.png",alt:"image"}})]),v._v(" "),t("p",[v._v("这种情况下，无法执行快速合并，只能试图把各自的修改合并起来，但这种合并就可能会有冲突")]),v._v(" "),t("p",[v._v("现在通过"),t("code",[v._v("git merge featurel")]),v._v("进行分支合并，如下所示：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/064.png",alt:"image"}})]),v._v(" "),t("p",[v._v("从冲突信息可以看到，"),t("code",[v._v("a.txt")]),v._v("发生冲突，必须手动解决冲突之后再提交")]),v._v(" "),t("p",[v._v("而"),t("code",[v._v("git status")]),v._v("同样可以告知我们冲突的文件：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/065.png",alt:"image"}})]),v._v(" "),t("p",[v._v("打开"),t("code",[v._v("a.txt")]),v._v("文件，可以看到如下内容：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/066.png",alt:"image"}})]),v._v(" "),t("p",[t("code",[v._v("git")]),v._v("用"),t("code",[v._v("<<<<<<<")]),v._v("，"),t("code",[v._v("=======")]),v._v("，"),t("code",[v._v(">>>>>>>")]),v._v("标记出不同分支的内容：")]),v._v(" "),t("ul",[t("li",[v._v("<<<<<<< 和 ======= 之间的区域就是当前更改的内容")]),v._v(" "),t("li",[v._v("======= 和 >>>>>>> 之间的区域就是传入进来更改的内容")])]),v._v(" "),t("p",[v._v("现在要做的事情就是将冲突的内容进行更改，对每个文件使用 "),t("code",[v._v("git add")]),v._v(" 命令来将其标记为冲突已解决。一旦暂存这些原本有冲突的文件，"),t("code",[v._v("Git")]),v._v("就会将它们标记为冲突已解决然后再提交：")]),v._v(" "),t("ul",[t("li",[v._v("git add a.txt")]),v._v(" "),t("li",[v._v('git commit -m "conflict fixed"')])]),v._v(" "),t("p",[v._v("此时"),t("code",[v._v("master")]),v._v("分支和"),t("code",[v._v("feature1")]),v._v("分支变成了下图所示：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/067.png",alt:"image"}})]),v._v(" "),t("p",[v._v("使用"),t("code",[v._v("git log")]),v._v("命令可以看到合并的信息：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/068.png",alt:"image"}})]),v._v(" "),t("h2",{attrs:{id:"三、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、总结"}},[v._v("#")]),v._v(" 三、总结")]),v._v(" "),t("p",[v._v("当"),t("code",[v._v("Git")]),v._v("无法自动合并分支时，就必须首先解决冲突，解决冲突后，再提交，合并完成")]),v._v(" "),t("p",[v._v("解决冲突就是把"),t("code",[v._v("Git")]),v._v("合并失败的文件手动编辑为我们期望的内容，再提交")])])}),[],!1,null,null,null);_.default=a.exports}}]);