(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{548:function(s,n,a){"use strict";a.r(n);var e=a(15),v=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"现象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现象"}},[s._v("#")]),s._v(" 现象")]),s._v(" "),a("p",[s._v("话不多说，直接上图！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/058.png",alt:"image"}})]),s._v(" "),a("p",[s._v("通过上图我们知道，答案是不相等，而且还有一个很神奇的问题，"),a("code",[s._v("0.1+1-1")]),s._v(" 也不等于 "),a("code",[s._v("0.1")]),s._v("，并且先加后减和先减后加的结果竟然还不一样！")]),s._v(" "),a("h2",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[s._v("#")]),s._v(" 原因")]),s._v(" "),a("p",[s._v("其实这个问题不能完全怪 "),a("code",[s._v("JavaScript")]),s._v("，导致这样的问题是因为 "),a("code",[s._v("JavaScript")]),s._v(" 中使用基于 "),a("code",[s._v("IEEE 754")]),s._v(" 标准的"),a("strong",[s._v("浮点数")]),s._v("运算，所以会产生舍入误差。"),a("br"),s._v("\n也就是说所有遵循 "),a("code",[s._v("IEEE 754")]),s._v(" 标准的语言进行浮点数运算的时候，都会有这个问题。")]),s._v(" "),a("h2",{attrs:{id:"产生误差过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#产生误差过程"}},[s._v("#")]),s._v(" 产生误差过程")]),s._v(" "),a("p",[s._v("接下来我们来揭秘产生误差的过程。"),a("br"),s._v("\n首先这里我们需要知道，浮点数运算的时候需要先转成二进制，然后再进行运算。那么十进制浮点数是如何转二进制的呢？")]),s._v(" "),a("p",[s._v("浮点数转二进制的过程如下："),a("br"),s._v("\n1.整数部分采用 "),a("code",[s._v("/2")]),s._v(" 取余法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("3 => 3/2 = 1 余 1  \n1 => 1/2 = 0 余 1  \n所以 3（十进制）= 11（二进制）\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("4 => 4%2 = 2 余 0  \n2 => 2%2 = 1 余 0  \n1 => 1%2 = 0 余 1  \n所以 4（十进制）= 100（二进制） \n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("2.小数部分采用 "),a("code",[s._v("*2")]),s._v(" 取整法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.5 => 0.5*2 = 1 取整 1\n0.5（十进制）= 0.1（二进制）\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.1 => 0.1*2 = 0.2 取整 0\n0.2 => 0.2*2 = 0.4 取整 0\n0.4 => 0.4*2 = 0.8 取整 0\n0.8 => 0.8*2 = 1.6 取整 1\n0.6 => 0.6*2 = 1.2 取整 1\n0.2 => 0.2*2 = 0.4 取整 0\n0.4 => 0.4*2 = 0.8 取整 0\n0.8 => 0.8*2 = 1.6 取整 1\n0.6 => 0.6*2 = 1.2 取整 1\n...发生循环\n得到结果 0.1（十进制）= 00011001100110011001100110011... (0011)循环（二进制）\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("同理，既有整数又有小数的数值进行二进制转换，就是分别对整数和小数部分进行二进制转换，再相加即可。")]),s._v(" "),a("p",[s._v("上面的例子中可以看到 "),a("code",[s._v("0.1")]),s._v(" 转二进制会发生无限循环，而 "),a("code",[s._v("IEEE 754")]),s._v(" 标准中的尾数位只能保存 "),a("code",[s._v("52 位")]),s._v(" 有效数字（具体原因我们稍后讲解），所以 "),a("code",[s._v("0.1")]),s._v(" 转二进制就会发生舍入，所以就产生了误差。")]),s._v(" "),a("p",[s._v("在讲解运算过程之前，我们需要 2 个前置知识：")]),s._v(" "),a("ol",[a("li",[s._v("十进制浮点数转换二进制后尾数的 "),a("code",[s._v("52 位")]),s._v(" 有效数字是从第一个 "),a("code",[s._v("1")]),s._v(" 开始向后保留 "),a("code",[s._v("52 位")]),s._v(" 有效数字，所以接下来你会发现 "),a("code",[s._v("0.1")]),s._v(" 和 "),a("code",[s._v("0.2")]),s._v(" 保留 "),a("code",[s._v("52 位")]),s._v(" 尾数后长度会不同。")]),s._v(" "),a("li",[s._v("在舍入的过程中，遵循 "),a("code",[s._v("0 舍 1 入")]),s._v(" 的规则。")]),s._v(" "),a("li",[s._v("下面的过程中为了方便大家理解，我对所有的保留 "),a("code",[s._v("52 位")]),s._v(" 尾数后后面没有 "),a("code",[s._v("52 位")]),s._v(" 的情况进行了补零，对部分数字为了方便运算进行了超过 "),a("code",[s._v("52 位")]),s._v(" 的补充和转换（比如 1）。")])]),s._v(" "),a("p",[s._v("接下来我们一起看一下示例中的运算过程：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.1\n转二进制\n0.0001100110011001100110011001100110011001100110011001100110011\n保留52位尾数\n0.00011001100110011001100110011001100110011001100110011010\n\n0.2\n转二进制\n0.001100110011001100110011001100110011001100110011001100110011\n保留52位尾数\n0.0011001100110011001100110011001100110011001100110011010\n\n进行相加\n0.00011001100110011001100110011001100110011001100110011010\n0.0011001100110011001100110011001100110011001100110011010\n----------------------------------------------------------\n0.01001100110011001100110011001100110011001100110011001110\n相加后的结果保留52位尾数\n0.010011001100110011001100110011001100110011001100110100\n转十进制\n0.30000000000000004\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("接下来是 "),a("code",[s._v("0.1+1-1")]),s._v(" 的运算过程：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.1\n转二进制\n0.0001100110011001100110011001100110011001100110011001100110011\n保留52位尾数\n0.00011001100110011001100110011001100110011001100110011010\n\n1\n转二进制并保留52位尾数\n1.0000000000000000000000000000000000000000000000000000\n\n进行相加\n0.00011001100110011001100110011001100110011001100110011010\n1.0000000000000000000000000000000000000000000000000000\n----------------------------------------------------------\n1.00011001100110011001100110011001100110011001100110011010\n相加后的结果保留52位尾数\n1.0001100110011001100110011001100110011001100110011010\n再减1\n0.00011001100110011001100110011001100110011001100110100000\n转十进制\n0.10000000000000009\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("接下来是 "),a("code",[s._v("0.1-1+1")]),s._v(" 的运算过程：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.1\n转二进制\n0.0001100110011001100110011001100110011001100110011001100110011\n保留52位尾数\n0.00011001100110011001100110011001100110011001100110011010\n\n1\n转二进制并保留52位尾数\n1.0000000000000000000000000000000000000000000000000000\n\n进行相减，这里其实等价于 1-0.1 转负数\n为了方便相减，我们将 1 的二进制进行转换和补零\n0.11111111111111111111111111111111111111111111111111111120\n0.00011001100110011001100110011001100110011001100110011010\n----------------------------------------------------------\n0.11100110011001100110011001100110011001100110011001100110 这里是一个接近 0.9 的负数\n相减后的结果保留52位尾数\n0.11100110011001100110011001100110011001100110011001101\n\n此时 -0.9+1 等价于 1-0.9\n同样，为了方便相减，我们将 1 的二进制进行转换和补零\n0.11111111111111111111111111111111111111111111111111112\n0.11100110011001100110011001100110011001100110011001101\n-------------------------------------------------------\n0.00011001100110011001100110011001100110011001100110011\n相减后的结果保留52位尾数\n0.00011001100110011001100110011001100110011001100110011000\n转十进制\n0.09999999999999998\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("p",[s._v("至此，我们就搞清楚了示例中的运算过程，从而知道了出现这些情况的原因，接下来，我们聊一下 "),a("code",[s._v("IEEE 754")]),s._v("，从而解开:")]),s._v(" "),a("ol",[a("li",[s._v("什么是尾数位")]),s._v(" "),a("li",[s._v("为什么是 "),a("code",[s._v("52 位尾数位")])]),s._v(" "),a("li",[s._v("为什么 "),a("code",[s._v("0 舍 1 入")])])]),s._v(" "),a("p",[s._v("以及更多的浮点数神秘面纱~")]),s._v(" "),a("h2",{attrs:{id:"ieee-754"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754"}},[s._v("#")]),s._v(" IEEE 754")]),s._v(" "),a("p",[a("code",[s._v("IEEE 754")]),s._v(" 中双精度浮点数使用 "),a("code",[s._v("64 bit")]),s._v(" 来进行存储：")]),s._v(" "),a("ul",[a("li",[s._v("第一位存储符号表示正负号 0 正 1 负")]),s._v(" "),a("li",[s._v("2-12位存储指数表示次方数")]),s._v(" "),a("li",[s._v("13-64位存储尾数表示精确度")])]),s._v(" "),a("p",[a("strong",[s._v("符号位")]),s._v("没有什么可说的，就是用来表示正负数的。"),a("br"),s._v(" "),a("strong",[s._v("指数位")]),s._v("表示次方数，这里的次方数是以当前的进制数为底，比如次方数为 "),a("code",[s._v("5")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("如果当前为十进制，就是 "),a("code",[s._v("10")]),s._v(" 的 "),a("code",[s._v("5 次方")])]),s._v(" "),a("li",[s._v("如果当前为二进制，就是 "),a("code",[s._v("2")]),s._v(" 的 "),a("code",[s._v("5 次方")])])]),s._v(" "),a("p",[a("strong",[s._v("尾数位")]),s._v("储存尾数表示精确度，用来表示一个大于等于 "),a("code",[s._v("1")]),s._v(" 小于 "),a("code",[s._v("2")]),s._v(" 的数值")]),s._v(" "),a("p",[s._v("综上所述，如果我们以 "),a("code",[s._v("s")]),s._v(" 表示正负号，"),a("code",[s._v("h")]),s._v(" 表示进制数，"),a("code",[s._v("e")]),s._v(" 表示次方数，"),a("code",[s._v("f")]),s._v(" 表示尾数，则浮点数 "),a("code",[s._v("value")]),s._v(" 可以表示为：")]),s._v(" "),a("p",[a("em",[s._v("value=s∗f∗hevalue = s*f*h^evalue=s∗f∗he")])]),s._v(" "),a("p",[s._v("相信到了这一步，小伙伴们对指数位和尾数位的理解会更清楚一点，也解释了前两个问题。")]),s._v(" "),a("ol",[a("li",[s._v("尾数位就是 "),a("code",[s._v("64 bit")]),s._v(" 浮点数存储尾数的部分，可以表示数值的精确度")]),s._v(" "),a("li",[a("code",[s._v("52 位")]),s._v(" 是在 "),a("code",[s._v("IEEE 754")]),s._v(" 标准制度的时候规定如此")])]),s._v(" "),a("p",[s._v("而我们上面直接转二进制运算的情况下，实际上是糅合了指数位和尾数位的一个结果，所以我们保留 "),a("code",[s._v("52 位")]),s._v("，是在第一个 "),a("code",[s._v("1")]),s._v(" 后面保留 "),a("code",[s._v("52 位")]),s._v(" 有效数字。"),a("br"),s._v("\n不知道你有没有发现一个问题： 尾数位只有 "),a("code",[s._v("52 位")]),s._v("，但是我们现在在第一个 "),a("code",[s._v("1")]),s._v(" 后面保留 "),a("code",[s._v("52 位")]),s._v(" 有效数字，那再加上前面的 "),a("code",[s._v("1")]),s._v(" 不就是 "),a("code",[s._v("53 位")]),s._v(" 位了吗？"),a("br"),s._v("\n这是因为，尾数部分的整数部分一定是一个 "),a("code",[s._v("1")]),s._v(",那为了充分利用 "),a("code",[s._v("52 位")]),s._v(" 空间表示更高的精确度，可以把一定等于 "),a("code",[s._v("1")]),s._v(" 的整数部分省略，"),a("code",[s._v("52 位")]),s._v(" 都用来表示小数。")]),s._v(" "),a("h3",{attrs:{id:"最大安全整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大安全整数"}},[s._v("#")]),s._v(" 最大安全整数")]),s._v(" "),a("p",[s._v("同理，因为只有 "),a("code",[s._v("52 位")]),s._v(" 尾数，所以 "),a("code",[s._v("JavaScript")]),s._v(" 中的最大安全整数是 "),a("code",[s._v("2^53-1")]),s._v("，其中 "),a("code",[s._v("53")]),s._v(" 是 "),a("code",[s._v("52 位")]),s._v(" 尾数加上前面省略的 "),a("code",[s._v("1")]),s._v("，而 "),a("code",[s._v("-1")]),s._v(" 是因为 "),a("code",[s._v("2^53")]),s._v(" 已经是一个边界值了，大于它的值会和它相等，所以最大的安全整数是 "),a("code",[s._v("2^53-1")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/059.png",alt:"image"}})]),s._v(" "),a("h3",{attrs:{id:"舍入规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#舍入规则"}},[s._v("#")]),s._v(" 舍入规则")]),s._v(" "),a("p",[a("code",[s._v("IEEE 754")]),s._v(" 标准列出4种不同的方法：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("舍入到最接近")]),s._v("：舍入到最接近，在一样接近的情况下偶数优先（Ties To Even，这是默认的舍入方式）：会将结果舍入为最接近且可以表示的值，但是当存在两个数一样接近的时候，则取其中的偶数（在二进制中是以0结尾的）。")]),s._v(" "),a("li",[a("strong",[s._v("朝+∞方向舍入")]),s._v("：会将结果朝正无限大的方向舍入。")]),s._v(" "),a("li",[a("strong",[s._v("朝-∞方向舍入")]),s._v("：会将结果朝负无限大的方向舍入。")]),s._v(" "),a("li",[a("strong",[s._v("朝0方向舍入")]),s._v("：会将结果朝0的方向舍入。")])]),s._v(" "),a("p",[s._v("第一种规则（也就是默认的舍入方式）可以简单理解为我们常用的 "),a("em",[s._v("四舍五入")]),s._v("，而转化到我们这里的二进制浮点数运算，就是 "),a("code",[s._v("0 舍 1 入")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("ol",[a("li",[s._v("使用 "),a("code",[s._v("JavaScript")]),s._v(" 提供的最小精度值判断误差是否在该值范围内"),a("br"),s._v(" "),a("code",[s._v("Math.abs(0.1 + 0.2 - 0.3) <= Number.EPSILON")])]),s._v(" "),a("li",[s._v("转为整数计算，计算后再转回小数")]),s._v(" "),a("li",[s._v("保留几位小数 比如金额，只需要精确到分即可")]),s._v(" "),a("li",[s._v("使用别人的轮子,例如："),a("code",[s._v("math.js")])]),s._v(" "),a("li",[s._v("转成字符串相加（效率较低）")])]),s._v(" "),a("h4",{attrs:{id:"参考文章链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[s._v("#")]),s._v(" 参考文章链接")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7056934829920616461",target:"_blank",rel:"noopener noreferrer"}},[s._v("用了一天时间，我终于彻底搞懂了 0.1+0.2 是否等于 0.3！"),a("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=v.exports}}]);