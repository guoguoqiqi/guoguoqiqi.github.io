(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{549:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("浏览器是多进程的工作的，"),a("strong",[t._v("从URL输入到渲染")]),t._v(" 会主要涉及到的，是浏览器进程、网络进程和渲染进程这三个：")]),t._v(" "),a("ol",[a("li",[t._v("浏览器进程负责处理、响应用户交互，比如点击、滚动；")]),t._v(" "),a("li",[t._v("网络进程负责处理数据的请求，提供下载功能；")]),t._v(" "),a("li",[t._v("渲染进程负责将获取到的HTML、CSS、JS处理成可以看见、可以交互的页面；")])]),t._v(" "),a("p",[a("strong",[t._v("从URL输入到页面渲染")]),t._v("整个过程可以分成网络请求和浏览器渲染两个部分，分别由网络进程和渲染进程去处理。")]),t._v(" "),a("h3",{attrs:{id:"网络请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络请求"}},[t._v("#")]),t._v(" "),a("strong",[t._v("网络请求")])]),t._v(" "),a("p",[t._v("网络请求部分进行了这几项工作：")]),t._v(" "),a("ol",[a("li",[t._v("URL的解析")]),t._v(" "),a("li",[t._v("检查资源缓存")]),t._v(" "),a("li",[t._v("DNS解析")]),t._v(" "),a("li",[t._v("建立TCP连接")]),t._v(" "),a("li",[t._v("TLS协商密钥")]),t._v(" "),a("li",[t._v("发送请求&接收响应")]),t._v(" "),a("li",[t._v("关闭TCP连接")])]),t._v(" "),a("p",[t._v("接下来会一一展开。")]),t._v(" "),a("h3",{attrs:{id:"url解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url解析"}},[t._v("#")]),t._v(" "),a("strong",[t._v("URL解析")])]),t._v(" "),a("p",[t._v("浏览器首先会判断输入的内容是一个URL还是搜索关键字。")]),t._v(" "),a("p",[t._v("如果是URL，会把不完整的URL合成完整的URL。一个完整的URL应该是："),a("code",[t._v("协议+主机+端口+路径[+参数][+锚点]")]),t._v("。比如我们在地址栏输入"),a("code",[t._v("www.baidu.com")]),t._v("，浏览器最终会将其拼接成"),a("code",[t._v("https://www.baidu.com/")]),t._v(",默认使用443端口。")]),t._v(" "),a("p",[t._v("如果是搜索关键字，会将其拼接到默认搜索引擎的参数部分去搜索。这个流程需要对输入的不安全字符编码进行转义（安全字符指的是数字、英文和少数符号）。因为URL的参数是不能有中文的，也不能有一些特殊字符，比如"),a("code",[t._v("= ? &")]),t._v("，否则当我搜索"),a("code",[t._v("1+1=2")]),t._v("，假如不加以转义，url会是"),a("code",[t._v("/search?q=1+1=2&source=chrome")]),t._v("，和URL本身的分隔符"),a("code",[t._v("=")]),t._v("产生了歧义。")]),t._v(" "),a("p",[t._v("URL对非安全字符转义时，使用的编码叫百分号编码，因为它使用百分号加上两位的16进制数表示。这两位16进制数来自UTF-8编码，将每一个中文转换成3个字节，比如我在google地址栏输入"),a("strong",[t._v("中文")]),t._v("”**，url会变成"),a("code",[t._v("/search?q=%E4%B8%AD%E6%96%87")]),t._v("，一共6个字节。")]),t._v(" "),a("p",[t._v("我们在写代码时经常会用的"),a("code",[t._v("encodeURI")]),t._v("和 "),a("code",[t._v("encodeURIComponent")]),t._v("正是起这个作用的，它们的规则基本一样，只是"),a("code",[t._v("= ? & ; /")]),t._v("这类URI组成符号，这些在"),a("code",[t._v("encodeURI")]),t._v("中不会被编码，但在"),a("code",[t._v("encodeURIComponent")]),t._v("中统统会。因为"),a("code",[t._v("encodeURI")]),t._v("是编码整个URL，而"),a("code",[t._v("encodeURIComponent")]),t._v("编码的是参数部分，需要更加严格把关。")]),t._v(" "),a("h3",{attrs:{id:"检查缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查缓存"}},[t._v("#")]),t._v(" "),a("strong",[t._v("检查缓存")])]),t._v(" "),a("p",[t._v("检查缓存一定是在发起真正的请求之前进行的，只有这样缓存的机制才会生效。如果发现有对应的缓存资源，则去检查缓存的有效期。")]),t._v(" "),a("ol",[a("li",[t._v("在有效期内的缓存资源直接使用，称之为强缓存，从chrome网络面板看到这类请求直接返回200，size是"),a("code",[t._v("memory cache")]),t._v("或者"),a("code",[t._v("disk cache")]),t._v("。"),a("code",[t._v("memory cache")]),t._v("是指从资源从内存中被取出，"),a("code",[t._v("disk cache")]),t._v("是指从磁盘中被取出；从内存中读取比从磁盘中快很多，但资源能不能分配到内存要取决于当下的系统状态。通常来说，刷新页面会使用内存缓存，关闭后重新打开会使用磁盘缓存。")]),t._v(" "),a("li",[t._v("超过有效期的，则携带缓存的资源标识向服务端发起请求，校验是否能继续使用，如果服务端告诉我们，可以继续使用本地存储，则返回304，并且不携带数据；如果服务端告诉我们需要用更新的资源，则返回200，并且携带更新后的资源和资源标识缓存到本地，方便下一次使用。")])]),t._v(" "),a("h3",{attrs:{id:"dns解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns解析"}},[t._v("#")]),t._v(" "),a("strong",[t._v("DNS解析")])]),t._v(" "),a("p",[t._v("如果没有成功使用本地缓存，则需要发起网络请求了。首先要做的是DNS解析。")]),t._v(" "),a("p",[t._v("会依次搜索:")]),t._v(" "),a("ol",[a("li",[t._v("浏览器的DNS缓存；")]),t._v(" "),a("li",[t._v("操作系统的DNS缓存;")]),t._v(" "),a("li",[t._v("路由器的DNS缓存；")]),t._v(" "),a("li",[t._v("向服务商的DNS服务器查询；")]),t._v(" "),a("li",[t._v("向全球13台根域名服务器查询；")])]),t._v(" "),a("p",[t._v("为了节省时间，可以在HTML头部去做DNS的预解析：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.baidu.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("为了保证响应的及时，DNS解析使用的是UDP协议")])]),t._v(" "),a("h3",{attrs:{id:"建立tcp连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立tcp连接"}},[t._v("#")]),t._v(" "),a("strong",[t._v("建立TCP连接")])]),t._v(" "),a("p",[t._v("我们发送的请求是基于TCP协议的，所以要先进行连接建立。建立连接的通信是打电话，双方都在线；无连接的通信是发短信，发送方不管接收方，自己说自己的。")]),t._v(" "),a("p",[t._v("这个确认接收方在线的过程就是通过TCP的三次握手完成的。")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送建立连接请求；")]),t._v(" "),a("li",[t._v("服务端发送建立连接确认，此时服务端为该TCP连接分配资源；")]),t._v(" "),a("li",[t._v("客户端发送建立连接确认的确认，此时客户端为该TCP连接分配资源；")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/192.png",alt:"image"}})]),t._v(" "),a("h4",{attrs:{id:"为什么要三次握手才算建立连接完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要三次握手才算建立连接完成"}},[t._v("#")]),t._v(" "),a("strong",[t._v("为什么要三次握手才算建立连接完成？")])]),t._v(" "),a("p",[t._v("可以先假设建立连接只要两次会发生什么。把上面的状态图稍加修改，看起来一切正常。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/193.png",alt:"image"}})]),t._v(" "),a("p",[t._v("但假如这时服务端收到一个失效的建立连接请求，我们会发现服务端的资源被浪费了——此时客户端并没有想给它传送数据，但它却准备好了内存等资源一直等待着。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/194.png",alt:"image"}})]),t._v(" "),a("p",[t._v("所以说，三次握手是为了保证客户端存活,防止服务端在收到失效的超时请求造成资源浪费。")]),t._v(" "),a("h3",{attrs:{id:"协商加密密钥-tls握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商加密密钥-tls握手"}},[t._v("#")]),t._v(" "),a("strong",[t._v("协商加密密钥——TLS握手")])]),t._v(" "),a("p",[t._v("为了保障通信的安全，我们使用的是HTTPS协议，其中的S指的就是TLS。TLS使用的是一种非对称+对称的方式进行加密。")]),t._v(" "),a("p",[t._v("对称加密就是两边拥有相同的秘钥，两边都知道如何将密文加密解密。这种加密方式速度很快，但是问题在于如何让双方知道秘钥。因为 传输数据都是走的网络，如果将秘钥通过网络的方式传递的话，秘钥被截获，就失去了加密的意义。")]),t._v(" "),a("p",[t._v("非对称加密，每个人都有一把公钥和私钥，公钥所有人都可以知道，私钥只有自己知道，将数据用公钥加密，解密必须使用私钥。这种加密方式就可以完美解决对称加密存在的问题，缺点是速度很慢。")]),t._v(" "),a("p",[t._v("我们采取非对称加密的方式协商出一个对称密钥，这个密钥只有发送方和接收方知道的密钥，流程如下：")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送一个随机值以及需要的协议和加密方式；")]),t._v(" "),a("li",[t._v("服务端收到客户端的随机值，发送自己的数字证书，附加上自己产生一个随机值，并根据客户端需求的协议和加密方式使用对应的方式；")]),t._v(" "),a("li",[t._v("客户端收到服务端的证书并验证是否有效，验证通过会再生成一个随机值，通过服务端证书的公钥去加密这个随机值并发送给服务端；")]),t._v(" "),a("li",[t._v("服务端收到加密过的随机值并使用私钥解密获得第三个随机值，这时候两端都拥有了三个随机值，可以通过这三个随机值按照之前约定的加密方式生成密钥，接下来的通信就可以通过该对称密钥来加密解密；")])]),t._v(" "),a("p",[t._v("通过以上步骤可知，在TLS握手阶段，两端使用非对称加密的方式来通信，但是因为非对称加密损耗的性能比对称加密大，所以在正式传输数据时，两端使用对称加密的方式。")]),t._v(" "),a("h3",{attrs:{id:"发送请求-接收响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送请求-接收响应"}},[t._v("#")]),t._v(" "),a("strong",[t._v("发送请求&接收响应")])]),t._v(" "),a("p",[t._v("HTTP的默认端口是80，HTTPS的默认端口是443。")]),t._v(" "),a("p",[t._v("请求的基本组成是"),a("code",[t._v("请求行+请求头+请求体")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("POST /hello HTTP/1.1\nUser-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3\nHost: www.example.com\nAccept-Language: en, mi\n\nname=niannian\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("响应的基本组成是"),a("code",[t._v("响应行+响应头+响应体")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("HTTP/1.1 200 OK\nContent-Type:application/json\nServer:apache\n\n{password:'123'}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"关闭tcp连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭tcp连接"}},[t._v("#")]),t._v(" "),a("strong",[t._v("关闭TCP连接")])]),t._v(" "),a("p",[t._v("等数据传输完毕，就要关闭TCP连接了。关闭连接的主动方可以是客户端，也可以是服务端，这里以客户端为例，整个过程有四次握手：")]),t._v(" "),a("ol",[a("li",[t._v("客户端请求释放连接，仅表示客户端不再发送数据了；")]),t._v(" "),a("li",[t._v("服务端确认连接释放，但这时可能还有数据需要处理和发送；")]),t._v(" "),a("li",[t._v("服务端请求释放连接，服务端这时不再需要发送数据时；")]),t._v(" "),a("li",[t._v("客户端确认连接释放;")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/195.png",alt:"image"}})]),t._v(" "),a("h4",{attrs:{id:"为什么要有四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有四次挥手"}},[t._v("#")]),t._v(" "),a("strong",[t._v("为什么要有四次挥手")])]),t._v(" "),a("p",[t._v("TCP 是可以双向传输数据的，每个方向都需要一个请求和一个确认。因为在第二次握手结束后，服务端还有数据传输，所以没有办法把第二次确认和第三次合并。")]),t._v(" "),a("h4",{attrs:{id:"主动方为什么会等待2msl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主动方为什么会等待2msl"}},[t._v("#")]),t._v(" "),a("strong",[t._v("主动方为什么会等待2MSL")])]),t._v(" "),a("p",[t._v("客户端在发送完第四次的确认报文段后会等待2MSL才正真关闭连接，MSL是指数据包在网络中最大的生存时间。目的是确保服务端收到了这个确认报文段，")]),t._v(" "),a("p",[t._v("假设服务端没有收到第四次握手的报文，试想一下会发生什么？在客户端发送第四次握手的数据包后，服务端首先会等待，在1个MSL后，它发现超过了网络中数据包的最大生存时间，但是自己还没有收到数据包，于是服务端认为这个数据包已经丢失了，它决定把第三次握手的数据包重新给客户端发送一次，这个数据包最多花费一个MSL会到达客户端。")]),t._v(" "),a("p",[t._v("一来一去，一共是2MSL，所以客户端在发送完第四次握手数据包后，等待2MSL是一种兜底机制，"),a("strong",[t._v("如果在2MSL内没有收到其他报文段，客户端则认为服务端已经成功接受到第四次挥手，连接正式关闭。")])]),t._v(" "),a("h3",{attrs:{id:"浏览器渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[t._v("#")]),t._v(" "),a("strong",[t._v("浏览器渲染")])]),t._v(" "),a("p",[t._v("上面讲完了网络请求部分，现在浏览器拿到了数据，剩下需要渲染进程工作了。浏览器渲染主要完成了一下几个工作：")]),t._v(" "),a("ol",[a("li",[t._v("构建DOM树；")]),t._v(" "),a("li",[t._v("样式计算；")]),t._v(" "),a("li",[t._v("布局定位；")]),t._v(" "),a("li",[t._v("图层分层；")]),t._v(" "),a("li",[t._v("图层绘制；")]),t._v(" "),a("li",[t._v("显示；")])]),t._v(" "),a("h3",{attrs:{id:"构建dom树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建dom树"}},[t._v("#")]),t._v(" "),a("strong",[t._v("构建DOM树")])]),t._v(" "),a("p",[t._v("HTML文件的结构没法被浏览器理解，所以先要把HTML中的标签变成一个可以给JS使用的结构。")]),t._v(" "),a("p",[t._v("在控制台可以尝试打印document，这就是解析出来的DOM树。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/196.png",alt:"image"}})]),t._v(" "),a("h3",{attrs:{id:"样式计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式计算"}},[t._v("#")]),t._v(" "),a("strong",[t._v("样式计算")])]),t._v(" "),a("p",[t._v("CSS文件一样没法被浏览器直接理解，所以首先把CSS解析成样式表。 这三类样式都会被解析：")]),t._v(" "),a("ul",[a("li",[t._v("通过 link 引用的外部 CSS 文件")]),t._v(" "),a("li",[a("code",[t._v("<style>")]),t._v("标签内的样式")]),t._v(" "),a("li",[t._v("元素的 style 属性内嵌的 CSS")])]),t._v(" "),a("p",[t._v("在控制台打印"),a("code",[t._v("document.styleSheets")]),t._v("，这就是解析出的样式表。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/197.png",alt:"image"}})]),t._v(" "),a("p",[t._v("利用这份样式表，我们可以计算出DOM树中每个节点的样式。之所以叫计算，是因为每个元素要继承其父元素的属性。")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("年年"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("比如上面的"),a("code",[t._v("年年")]),t._v("，不仅要接受span设定的样式，还要继承div设置的。")]),t._v(" "),a("p",[t._v("DOM树中的节点有了样式，现在被叫做渲染树。")]),t._v(" "),a("h4",{attrs:{id:"为什么要把css放在头部-js放在body的尾部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要把css放在头部-js放在body的尾部"}},[t._v("#")]),t._v(" "),a("strong",[t._v("为什么要把CSS放在头部，js放在body的尾部")])]),t._v(" "),a("p",[t._v("在解析HTML的过程中，遇到需要加载的资源特点如下：")]),t._v(" "),a("ul",[a("li",[t._v("CSS资源异步下载，下载和解析都不会阻塞构建dom树"),a("code",[t._v("<link href='./style.css' rel='stylesheet'/>")])]),t._v(" "),a("li",[t._v("JS资源同步下载，下载和执行都会阻塞构建dom树"),a("code",[t._v("<script src='./index.js'/>")])])]),t._v(" "),a("p",[t._v("因为这样的特性，往往推荐将CSS样式表放在head头部，js文件放在body尾部，使得渲染能尽早开始。")]),t._v(" "),a("h4",{attrs:{id:"css会阻塞html解析吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css会阻塞html解析吗"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS会阻塞HTML解析吗")])]),t._v(" "),a("p",[t._v("上文提到页面渲染是渲染进程的任务，这个渲染进程中又细分为GUI渲染线程和JS线程。")]),t._v(" "),a("p",[t._v("解析HTML生成DOM树，解析CSS生成样式表以及后面去生成布局树、图层树都是由GUI渲染线程去完成的，这个线程可以一边解析HTML，一边解析CSS，这两个是不会冲突的，所以也提倡把CSS在头部引入。")]),t._v(" "),a("p",[t._v("但是在JS线程执行时，GUI渲染线程没有办法去解析HTML，这是因为JS可以操作DOM，如果两者同时进行可能引起冲突。如果这时JS去修改了样式，那此时CSS的解析和JS的执行也没法同时进行了，会先等CSS解析完成，再去执行JS，最后再去解析HTML。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/198.png",alt:"image"}})]),t._v(" "),a("p",[t._v("从这个角度来看，CSS有可能阻塞HTML的解析。")]),t._v(" "),a("h4",{attrs:{id:"预加载扫描器是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预加载扫描器是什么"}},[t._v("#")]),t._v(" "),a("strong",[t._v("预加载扫描器是什么")])]),t._v(" "),a("p",[t._v("上面提到的外链资源，不论是同步加载JS还是异步加载CSS、图片等，都要到HTML解析到这个标签才能开始，这似乎不是一种很好的方式。实际上，从2008年开始，浏览器开始逐步实现了预加载扫描器：在拿到HTML文档的时候，先扫描整个文档，把CSS、JS、图片和web字体等提前下载。")]),t._v(" "),a("h4",{attrs:{id:"js脚本引入时async和defer有什么差别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js脚本引入时async和defer有什么差别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("js脚本引入时async和defer有什么差别")])]),t._v(" "),a("p",[t._v("预加载扫描器解决了JS同步加载阻塞HTML解析的问题，但是我们还没有解决JS执行阻塞HTML解析的问题。所有有了async和defer属性。")]),t._v(" "),a("ul",[a("li",[t._v("没有 defer 或 async，浏览器会立即加载并执行指定的脚本")]),t._v(" "),a("li",[t._v("async 属性表示异步执行引入的 JavaScript，经加载好，就会开始执行")]),t._v(" "),a("li",[t._v("defer 属性表示延迟到DOM解析完成，再执行引入的 JS")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/199.png",alt:"image"}})]),t._v(" "),a("blockquote",[a("p",[t._v("在加载多个JS脚本的时候，async是无顺序的执行，而defer是有顺序的执行")])]),t._v(" "),a("h4",{attrs:{id:"preload、prefetch有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preload、prefetch有什么区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("preload、prefetch有什么区别")])]),t._v(" "),a("p",[t._v("之前提到过预加载扫描器，它能提前加载页面需要的资源，但这一功能只对特定写法的外链生效，并且我们没有办法按照自己的想法给重要的资源一个更高的优先级，所以有了preload和prefetch。")]),t._v(" "),a("ol",[a("li",[t._v("preload：以高优先级为当前页面加载资源；")]),t._v(" "),a("li",[t._v("prefetch：以低优先级为后面的页面加载未来需要的资源，只会在空闲时才去加载；")])]),t._v(" "),a("p",[t._v("无论是preload还是prefetch，都只会加载，不会执行，如果预加载的资源被服务器设置了可以缓存"),a("code",[t._v("cache-control")]),t._v("那么会进入磁盘，反之只会被保存在内存中。")]),t._v(" "),a("p",[t._v("具体使用如下：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 文件加载 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("news.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hello world!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 文件文件执行 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("defer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("为了保证资源正确被预加载，使用时需要注意：")]),t._v(" "),a("ol",[a("li",[t._v("preload的资源应该在当前页面立即使用，如果不加上script标签执行预加载的资源，控制台中会显示警告，提示预加载的资源在当前页面没有被引用；")]),t._v(" "),a("li",[t._v("prefetch的目的是取未来会使用的资源，所以当用户从A页面跳转到B页面时，进行中的preload的资源会被中断，而prefetch不会；")]),t._v(" "),a("li",[t._v("使用preload时，应配合as属性，表示该资源的优先级，使用 "),a("code",[t._v('as="style"')]),t._v(" 属性将获得最高的优先级，"),a("code",[t._v('as ="script"')]),t._v("将获得低优先级或中优先级，其他可以取的值有"),a("code",[t._v("font/image/audio/video")]),t._v("；")]),t._v(" "),a("li",[t._v("preload字体时要加上"),a("code",[t._v("crossorigin")]),t._v("属性，即使没有跨域，否则会重复加载：")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload href="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v('font.woff"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("font"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("crossorigin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("此外，这两种预加载资源不仅可以通过HTML标签设置，还可以通过js设置")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v('var res = document.createElement("link"); \nres.rel = "preload"; \nres.as = "style"; \nres.href = "css/mystyles.css"; \ndocument.head.appendChild(res); \n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("以及 HTTP 响应头：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("Link: </uploads/images/pic.png>; rel=prefetch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"布局定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局定位"}},[t._v("#")]),t._v(" "),a("strong",[t._v("布局定位")])]),t._v(" "),a("p",[t._v("上面详细的讲述了HTML和CSS加载、解析过程，现在我们的渲染树中的节点有了样式，但是不知道要画在哪个位置。所以还需要另外一颗布局树确定元素的几何定位。")]),t._v(" "),a("p",[t._v("布局树只取渲染树中的可见元素，意味着head标签，"),a("code",[t._v("display:none")]),t._v("的元素不会被添加。")]),t._v(" "),a("h3",{attrs:{id:"图层分层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图层分层"}},[t._v("#")]),t._v(" "),a("strong",[t._v("图层分层")])]),t._v(" "),a("p",[t._v("现在我们有了布局树，但依旧不能直接开始绘制，在此之前需要分层，生成一棵对应的图层树。浏览器的页面实际上被分成了很多图层，这些图层叠加后合成了最终的页面。")]),t._v(" "),a("p",[t._v("因为页面中有很多复杂的效果，如一些复杂的 3D 变换、页面滚动，或者使用 z-index 做 z 轴排序等，我们希望能更加方便地实现这些效果。")]),t._v(" "),a("p",[t._v("并不是布局树的每个节点都能生成一个图层，如果一个节点没有自己的层，那么这个节点就从属于父节点的图层")]),t._v(" "),a("p",[t._v("通常满足下面两点中任意一点的元素就可以被提升为单独的一个图层。")]),t._v(" "),a("p",[t._v("1、拥有层叠上下文属性的元素会被提升为单独的一层：明确定位属性"),a("code",[t._v("position")]),t._v("的元素、定义透明属性"),a("code",[t._v("opacity")]),t._v("的元素、使用 CSS 滤镜"),a("code",[t._v("filter")]),t._v("的元素等，都拥有层叠上下文属性。")]),t._v(" "),a("p",[t._v("2、需要剪裁（clip）的地方也会被创建为图层"),a("code",[t._v("overflow")])]),t._v(" "),a("p",[t._v("在chrome的开发者工具："),a("code",[t._v("更多选项-更多工具-Layers")]),t._v("可以看到图层的分层情况。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/200.png",alt:"image"}})]),t._v(" "),a("h3",{attrs:{id:"图层绘制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图层绘制"}},[t._v("#")]),t._v(" "),a("strong",[t._v("图层绘制")])]),t._v(" "),a("p",[t._v("在完成图层树的构建之后，接下来终于到对每个图层进行绘制。 首先会把图层拆解成一个一个的绘制指令，排布成一个绘制列表，在上文提到的开发者工具的Layers面板中，点击detail中的profiler可以看到绘制列表。")]),t._v(" "),a("p",[t._v("至此，渲染进程中的主线程——GUI渲染线程已经完成了它所有任务，接下来交给渲染进程中的合成现成。")]),t._v(" "),a("p",[t._v("合成线程接下来会把视口拆分成图快，把图块转换成位图。")]),t._v(" "),a("p",[t._v("至此，渲染进程的工作全部完成，接下来会把生成的位图还给浏览器进程，最后在页面上显示。")]),t._v(" "),a("h3",{attrs:{id:"性能优化-还可以做些什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化-还可以做些什么"}},[t._v("#")]),t._v(" "),a("strong",[t._v("性能优化，还可以做些什么")])]),t._v(" "),a("p",[t._v("本篇不专讲性能优化，只是在这个命题下补充一些常见手段。")]),t._v(" "),a("h3",{attrs:{id:"预解析、预渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预解析、预渲染"}},[t._v("#")]),t._v(" "),a("strong",[t._v("预解析、预渲染")])]),t._v(" "),a("p",[t._v("除了上文提到的使用preload、prefetch去提前加载，还可以使用"),a("code",[t._v("DNS Prefetch")]),t._v("、"),a("code",[t._v("Prerender")]),t._v("、"),a("code",[t._v("Preconnect")])]),t._v(" "),a("ol",[a("li",[t._v("DNS Prefetch:DNS 预解析；")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//fonts.googleapis.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",[a("li",[t._v("preconnect：在一个 HTTP 请求正式发给服务器前预先执行一些操作，这包括 DNS 解析，TLS 协商，TCP 握手；")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.domain.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preconnect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("crossorigin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/201.png",alt:"image"}})]),t._v(" "),a("p",[t._v("3. Prerender:获取下个页面所有的资源，在空闲时渲染整个页面；")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prerender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://www.keycdn.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"减少回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少回流和重绘"}},[t._v("#")]),t._v(" "),a("strong",[t._v("减少回流和重绘")])]),t._v(" "),a("p",[t._v("回流是指浏览器需要重新计算样式、布局定位、分层和绘制，回流又被叫重排；")]),t._v(" "),a("p",[t._v("触发回流的操作：")]),t._v(" "),a("ul",[a("li",[t._v("添加或删除可见的DOM元素")]),t._v(" "),a("li",[t._v("元素的位置发生变化")]),t._v(" "),a("li",[t._v("元素的尺寸发生变化")]),t._v(" "),a("li",[t._v("浏览器的窗口尺寸变化")])]),t._v(" "),a("p",[t._v("重绘是只重新像素绘制，当元素样式的改变不影响布局时触发。")]),t._v(" "),a("p",[t._v("回流=计算样式+布局+分层+绘制；重绘=绘制。故回流对性能的影响更大")]),t._v(" "),a("p",[t._v("所以应该尽量避免回流和重绘。比如利用GPU加速来实现样式修改，"),a("code",[t._v("transform/opacity/filters")]),t._v("这些属性的修改都不是在主线程完成的，不会重绘，更不会回流。")]),t._v(" "),a("h4",{attrs:{id:"参考文章链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[t._v("#")]),t._v(" 参考文章链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/61309490",target:"_blank",rel:"noopener noreferrer"}},[t._v("是js的加载阻塞了页面的渲染还是js的执行阻塞了页面的渲染？"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);