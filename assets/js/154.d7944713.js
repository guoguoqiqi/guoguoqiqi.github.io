(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{572:function(e,t,r){"use strict";r.r(t);var a=r(15),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"interface和type的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#interface和type的区别"}},[e._v("#")]),e._v(" interface和type的区别")]),e._v(" "),r("h3",{attrs:{id:"相同点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[e._v("#")]),e._v(" 相同点")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("都可以描述一个对象或者函数")])]),e._v(" "),r("li",[r("p",[e._v("都允许拓展（extends）")]),e._v(" "),r("p",[e._v("interface 和 type 都可以拓展，并且两者并不是相互独立的，也就是说 interface 可以 extends type, type 也可以 extends interface 。 虽然效果差不多，但是两者语法不同。")])])]),e._v(" "),r("h3",{attrs:{id:"不同点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[e._v("#")]),e._v(" 不同点")]),e._v(" "),r("ol",[r("li",[e._v("type 可以声明基本类型别名，联合类型，元组等类型，而 interface 不行")]),e._v(" "),r("li",[e._v("type 语句中还可以使用 typeof 获取实例的 类型进行赋值，而 interface 不行")]),e._v(" "),r("li",[e._v("type还可以定义联合类型等")]),e._v(" "),r("li",[e._v("interface 能够声明合并，而 type 不行")])]),e._v(" "),r("p",[e._v("一般来说，如果不清楚什么时候用interface/type，能用 interface 实现，就用 interface , 如果不能就用 type 。")]),e._v(" "),r("h4",{attrs:{id:"参考文章链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章链接"}},[e._v("#")]),e._v(" 参考文章链接")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.cn/post/6844903749501059085",target:"_blank",rel:"noopener noreferrer"}},[e._v("Typescript 中的 interface 和 type 到底有什么区别"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);